# Copyright (c) 2021-2023 Valve Corporation
# Copyright (c) 2021-2023 LunarG, Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Linux (formatting, build, test)

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
    push:
    pull_request:
        branches:
            - main

jobs:
  code-format:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Execute Source Code Format Checking Script
        run: python3 scripts/check_code_format.py --fetch-main --target-refspec=FETCH_HEAD

  linux:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cc: [gcc, clang]
        cxx: [g++, clang++]
        config: [debug, release]
        exclude:
          - cc: gcc
            cxx: clang++
          - cc: clang
            cxx: g++
          - cc: clang
            config: debug
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.17.2
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Install build dependencies
        run: |
          python3 -m pip install jsonschema
          sudo apt-get -qq update
          sudo apt-get install -y libxkbcommon-dev libwayland-dev libmirclient-dev libxrandr-dev \
                                libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-ewmh-dev \
                                libxcb-randr0-dev
      - name: Cache dependent components
        # Speed up builds by caching the build/install artifacts so they can be retrieved without rebuilding.
        # Note: Normally the build/install artifacts are enough to satisfy the dependencies.
        #       But in this repo, there are extra tests and steps that require files that are not placed in build/install.
        #       When adding new similar tests, make sure to add any other required directories/files to the cache list.
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-linux
        with:
          path: |
            external/${{ matrix.config }}/glslang/build/install
            external/${{ matrix.config }}/Vulkan-Headers/build/install
            external/${{ matrix.config }}/SPIRV-Headers/build/install
            external/${{ matrix.config }}/SPIRV-Tools/build/install
            external/${{ matrix.config }}/robin-hood-hashing/build/install
            external/${{ matrix.config }}/googletest/build/install
            external/${{ matrix.config }}/Vulkan-Headers/registry
            external/${{ matrix.config }}/SPIRV-Headers/include
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.cc }}-${{ matrix.cxx }}-${{ matrix.config }}-${{ hashfiles('scripts/known_good.json') }}
      - name: Build Vulkan-ValidationLayers
        run: python3 scripts/github_ci_win_linux.py --build --config ${{ matrix.config }}
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
      - name: Test Vulkan-ValidationLayers - Pixel 6 Adreno profile
        run: python3 scripts/github_ci_win_linux.py --test --config release
        env:
          VK_KHRONOS_PROFILES_PROFILE_FILE: tests/device_profiles/pixel_6_adreno.json
      - name: Test Vulkan-ValidationLayers - Pixel 6 Mali profile
        run: python3 scripts/github_ci_win_linux.py --test --config release
        env:
          VK_KHRONOS_PROFILES_PROFILE_FILE: tests/device_profiles/pixel_6_mali.json
      - name: Test Vulkan-ValidationLayers - NVIDIA Tegra X1 profile
        run: python3 scripts/github_ci_win_linux.py --test --config release
        env:
          VK_KHRONOS_PROFILES_PROFILE_FILE: tests/device_profiles/nvidia_tegra_x1.json

  linux-cpp20:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Install build dependencies
        run: |
          python3 -m pip install jsonschema
          sudo apt-get -qq update
          sudo apt-get install -y libxkbcommon-dev libwayland-dev libmirclient-dev libxrandr-dev \
                                libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-ewmh-dev \
                                libxcb-randr0-dev cmake
      - name: Cache dependent components
        # Speed up builds by caching the build/install artifacts so they can be retrieved without rebuilding.
        # Note: Normally the build/install artifacts are enough to satisfy the dependencies.
        #       But in this repo, there are extra tests and steps that require files that are not placed in build/install.
        #       When adding new similar tests, make sure to add any other required directories/files to the cache list.
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-linux-cpp20
        with:
          path: |
            external/${{ matrix.config }}/glslang/build/install
            external/${{ matrix.config }}/Vulkan-Headers/build/install
            external/${{ matrix.config }}/SPIRV-Headers/build/install
            external/${{ matrix.config }}/SPIRV-Tools/build/install
            external/${{ matrix.config }}/robin-hood-hashing/build/install
            external/${{ matrix.config }}/googletest/build/install
            external/${{ matrix.config }}/Vulkan-Headers/registry
            external/${{ matrix.config }}/SPIRV-Headers/include
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashfiles('scripts/known_good.json') }}
      - name: Build Vulkan-ValidationLayers
        run: python3 scripts/github_ci_win_linux.py --build --config release --cmake='-DVVL_CPP_STANDARD=20'
        env:
          CC: clang
          CXX: clang++
      - name: Test Vulkan-ValidationLayers - Pixel 6 Adreno profile
        run: python3 scripts/github_ci_win_linux.py --test --config release --cmake='-DVVL_CPP_STANDARD=20'
        env:
          VK_KHRONOS_PROFILES_PROFILE_FILE: tests/device_profiles/pixel_6_adreno.json
      - name: Test Vulkan-ValidationLayers - Pixel 6 Mali profile
        run: python3 scripts/github_ci_win_linux.py --test --config release --cmake='-DVVL_CPP_STANDARD=20'
        env:
          VK_KHRONOS_PROFILES_PROFILE_FILE: tests/device_profiles/pixel_6_mali.json
      - name: Test Vulkan-ValidationLayers - NVIDIA Tegra X1 profile
        run: python3 scripts/github_ci_win_linux.py --test --config release --cmake='-DVVL_CPP_STANDARD=20'
        env:
          VK_KHRONOS_PROFILES_PROFILE_FILE: tests/device_profiles/nvidia_tegra_x1.json

  gn:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
      - name: Cache dependent components
        # Speed up builds by caching the build/install artifacts so they can be retrieved without rebuilding.
        # Note: Normally the build/install artifacts are enough to satisfy the dependencies.
        #       But in this repo, there are extra tests and steps that require files that are not placed in build/install.
        #       When adding new similar tests, make sure to add any other required directories/files to the cache list.
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-gn
        with:
          path: |
            buildtools/
            depot_tools/
            testing/
            tools/
            third_party/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashfiles('scripts/known_good.json') }}
      - name: Install build dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y libxkbcommon-dev libwayland-dev libxrandr-dev \
                                  libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-ewmh-dev \
                                  libxcb-randr0-dev
      - name: Build Vulkan-ValidationLayers Using Ninja
        run: python3 scripts/github_ci_gn.py
