// Copyright (c) 2021-2025 The Khronos Group Inc.
// Copyright (c) 2021-2025 Valve Corporation
// Copyright (c) 2021-2025 LunarG, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#version 450

#extension GL_GOOGLE_include_directive : enable

#include "gpuav_shaders_constants.h"
#include "push_data.h"

layout(push_constant) uniform UniformInfo {
    DrawIndexedIndirectIndexBufferPushData pc;
};

// CountBuffer won't be bound for non-count draws
layout(set = kValPipeDescSet, binding = kPreDrawBinding_CountBuffer) 
readonly buffer CountBuffer {
    uint count_buffer[];
};

layout(set = kValPipeDescSet, binding = kPreDrawBinding_DispatchIndirectBuffer) 
buffer DipatchIndirectBuffer {
    uint dispatch_indirect_x;
    uint dispatch_indirect_y;
    uint dispatch_indirect_z;
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void main() {
    uint draw_count = 0;
    if ((pc.flags & kIndexedIndirectDrawFlags_DrawCountFromBuffer) == 0) {
        draw_count = pc.api_draw_count;
    } else {
        // Need to clamp draw count value stored in count buffer to the maxDrawCount
        // that was specified at vkCmdDrawIndexedIndirect time.
        // pc.api_draw_count is used to store maxDrawCount
        draw_count = min(count_buffer[pc.api_count_buffer_offset_dwords], pc.api_draw_count);
    }
    
    dispatch_indirect_x = 
        (draw_count / DrawIndexedIndirect_LocalWorkGroupSizeX) + 
        uint((draw_count % DrawIndexedIndirect_LocalWorkGroupSizeX) > 0);
    dispatch_indirect_y = 1;
    dispatch_indirect_z = 1;
}
